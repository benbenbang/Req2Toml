{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ue612 Home","text":""},{"location":"#poetry-import-plugin","title":"Poetry Import Plugin","text":"<p><code>poetry-import-plugin</code> is a Python plugin for Poetry that simplifies the process of importing dependencies from <code>requirements.txt</code> files into a Poetry project. It allows you to integrate dependencies into specified dependency groups within the project's <code>pyproject.toml</code> file, optionally applying constraints from a constraints file. This plugin also supports updating the Poetry lock file and installing dependencies.</p> <p>ps. It is renamed from <code>Req2Toml</code></p>"},{"location":"#features","title":"Features","text":"<ul> <li>Import dependencies from multiple <code>requirements.txt</code> files into specified groups.</li> <li>Apply version constraints from a constraints file.</li> </ul>"},{"location":"#installation","title":"Installation","text":"<p>Please follow the official docs for the latest available methods.</p> <p>Currently (as of 2024), poetry provides three ways to install the plugin:</p>"},{"location":"#with-pipx-inject","title":"With <code>pipx inject</code>","text":"<pre><code># To install\npipx inject poetry-import-plugin\n\n# To uninstall\npipx uninject poetry-import-plugin\n</code></pre>"},{"location":"#with-pip","title":"With <code>pip</code>","text":"<p>Install from PyPI</p> <pre><code># To install\n$POETRY_HOME/bin/pip install --no-cache-dir poetry-import-plugin\n\n# To uninstall\n$POETRY_HOME/bin/pip uninstall poetry-import-plugin\n</code></pre>"},{"location":"#the-self-add-command-not-recommended-for-windows-users","title":"The <code>self add</code> command (\u26a0\ufe0f not recommended for Windows users)","text":"<pre><code># To install\npoetry self add poetry-import-plugin\n\n# To uninstall\npoetry self remove poetry-plugin\n</code></pre>"},{"location":"#usage","title":"Usage","text":"<p>The <code>import</code> command can be used to import dependencies from <code>requirements.txt</code> files into your Poetry project. Below are the available options and arguments:</p>"},{"location":"#arguments","title":"Arguments","text":"<ul> <li><code>files</code> (optional, multiple): The <code>requirements.txt</code> files to import.</li> </ul>"},{"location":"#options","title":"Options","text":"<ul> <li><code>--group</code>, <code>-g</code> (optional, multiple): Specifies the dependency group(s) into which the dependencies will be imported. Multiple groups can be specified, each followed by a list of dependency files to import.</li> <li><code>--constraint</code>, <code>-c</code> (optional): Specifies a constraint file to apply version restrictions on dependencies during import.</li> <li><code>--lock</code> (optional): Updates the Poetry lock file without installing the packages.</li> <li><code>--no-update</code> (optional): Prevents updating the lock file when running the lock operation.</li> <li><code>--install</code> (optional): Runs a Poetry installation to install all dependencies defined in <code>pyproject.toml</code>.</li> </ul>"},{"location":"#examples","title":"Examples","text":"<p> 1. Import dependencies from <code>requirements.txt</code> into the default group:</p> <pre><code>poetry import requirements.txt\n</code></pre> <p> 2. Import dependencies from multiple <code>requirements.txt</code> files into specific groups:</p> <pre><code>poetry import -g dev dev-requirements.txt -g test test-requirements.txt\n</code></pre> <p> 3. Apply constraints from a constraints file during import:</p> <pre><code>poetry import -c constraints.txt requirements.txt\n</code></pre> <p> 4. Update the Poetry lock file after importing dependencies:</p> <pre><code>poetry import --lock requirements.txt\n</code></pre> <p> 5. Install all dependencies after importing:</p> <pre><code>poetry import --install requirements.txt\n</code></pre>"},{"location":"#contact","title":"Contact","text":"<p>For any questions or feedback, please open an issue on the GitHub repository or contact the author.</p>"}]}